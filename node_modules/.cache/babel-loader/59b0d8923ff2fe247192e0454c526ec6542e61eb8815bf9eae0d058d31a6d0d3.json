{"ast":null,"code":"export function applyStyle(node, options) {\n  const {\n    style\n  } = node;\n  if (options.backgroundColor) {\n    style.backgroundColor = options.backgroundColor;\n  }\n  if (options.width) {\n    style.width = `${options.width}px`;\n  }\n  if (options.height) {\n    style.height = `${options.height}px`;\n  }\n  const manual = options.style;\n  if (manual != null) {\n    Object.keys(manual).forEach(key => {\n      style[key] = manual[key];\n    });\n  }\n  return node;\n}","map":{"version":3,"names":["applyStyle","node","options","style","backgroundColor","width","height","manual","Object","keys","forEach","key"],"sources":["C:\\Users\\nguye\\receipt-app\\node_modules\\html-to-image\\src\\apply-style.ts"],"sourcesContent":["import { Options } from './types'\n\nexport function applyStyle<T extends HTMLElement>(\n  node: T,\n  options: Options,\n): T {\n  const { style } = node\n\n  if (options.backgroundColor) {\n    style.backgroundColor = options.backgroundColor\n  }\n\n  if (options.width) {\n    style.width = `${options.width}px`\n  }\n\n  if (options.height) {\n    style.height = `${options.height}px`\n  }\n\n  const manual = options.style\n  if (manual != null) {\n    Object.keys(manual).forEach((key: any) => {\n      style[key] = manual[key] as string\n    })\n  }\n\n  return node\n}\n"],"mappings":"AAEA,OAAM,SAAUA,UAAUA,CACxBC,IAAO,EACPC,OAAgB;EAEhB,MAAM;IAAEC;EAAK,CAAE,GAAGF,IAAI;EAEtB,IAAIC,OAAO,CAACE,eAAe,EAAE;IAC3BD,KAAK,CAACC,eAAe,GAAGF,OAAO,CAACE,eAAe;;EAGjD,IAAIF,OAAO,CAACG,KAAK,EAAE;IACjBF,KAAK,CAACE,KAAK,GAAG,GAAGH,OAAO,CAACG,KAAK,IAAI;;EAGpC,IAAIH,OAAO,CAACI,MAAM,EAAE;IAClBH,KAAK,CAACG,MAAM,GAAG,GAAGJ,OAAO,CAACI,MAAM,IAAI;;EAGtC,MAAMC,MAAM,GAAGL,OAAO,CAACC,KAAK;EAC5B,IAAII,MAAM,IAAI,IAAI,EAAE;IAClBC,MAAM,CAACC,IAAI,CAACF,MAAM,CAAC,CAACG,OAAO,CAAEC,GAAQ,IAAI;MACvCR,KAAK,CAACQ,GAAG,CAAC,GAAGJ,MAAM,CAACI,GAAG,CAAW;IACpC,CAAC,CAAC;;EAGJ,OAAOV,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}